本应用是针对MBAACC满月七夜打择的辅助工具。大致作用就是输出七夜在不同情况下可以使用的动作，或者说筛选出其中的部分动作。

首先说明本应用以及操作方式：
“示例”中有一个大概的使用步骤，以后应该会出视频详细讲解。
“CharacterList、SkillPoint、SkillGraph”是资源文件，不建议更改，如果很会溜冰的话，可以往里面添加DLC动作，目前三文件中只涉及基础实用的动作，还有一些花里胡哨的东西并没有加。
“说明”也就是本文件了。
“溜冰场-测试版”也就是启动程序，打开的话就可以开始使用了。


界面采用多选框方式，即对于普通选项，可以选择多个。
输入方向键或wsad：控制光标位置
输入回车键：回车普通选项会在（选/不选）中切换
			回车特殊项（全选，继续，返回）会产生相应的效果
输入空格等价于选中“全选”
输入PageDown等价于选中“继续”
输入esc,BackSapce,PageUp等价于选中“返回”


具体筛选步骤为：
1.选择角色：不同角色在起攻帧上会有略微的差距，且部分角色差距是很大的，也就是说不同角色可以打的择不同

2.选择连段：选择起攻连，不同起攻连的后续时间不同，画面上显示的并非全部的起攻连，而是一类相同结果的连段，具体内容这里不作细究

3.选择中继：也可以说是（连段结束后，发出攻击前）这段时间内的动作，在看到选择内容后应该就可以理解了。开始时默认中继为全选，取消选中则计算时会无视这个动作，也就不会出现在结果输出中。
  此外中继技能有一个“重名”的现象，这是因为它们并非是真正的“一个技能”，这点的话目前我还没有介绍，可能以后会出一个专门的文件说明，不懂的话选上就好了，反正也不会出现不成立的情况。

4.选择结尾：也就是择的最后一个动作，攻击。选择原理和中继一样，开始时默认全选。

5.输入延迟区间：延迟区间为两个整数，可正可负，这部分涉及帧数内部的计算，可能会有些难理解，如果不知道怎么填的话填入两个0就可以。
  
  这里对延迟区间作一个简单的说明：这里的延迟，意思是按键的延迟，当延迟为0的时候，也就是最速，延迟为正数，则为需要延迟输入，延迟为负数，也就是即便最速，也会陷入不利的局面（也就是动作比对面起身要慢），这种情况默认当然是不允许的，但延迟区间可以允许设定一个范围，使得对从不利到需要延迟的一片区域内的时间进行全部筛选。输入的两个数随意大小排列，系统会在内部取最小与最大放到区间左右两侧。
  
  所以有一个很简单的用法：如果对自己的按键精准度不够自信，觉得自己会比最速动作慢个几帧，那么就可以设置延迟区间为“x至x（即输入两次x）”x就是会按慢的帧数，这样，系统就会只筛选延迟后成立的起攻择。
  
  但这种用法显然上并不是延迟区间的主要作用。实际上，部分择在最速情况下，会存在“攻击持续时间”已经过去了，但对方仍未起身的情况，而这时就需要玩家进行手动的放帧，放帧的手法实际上还有些细节，我称其为偷帧，好的偷帧可以让对方看不清择的动作，所以这是一个十分有用的技巧，也因此溜冰玩家会主动设置延迟区间，寻找最速外的动作。至于负数延迟，在某些情况下依然很有用，这里不细嗦（常见的负延迟例如-2f:可封跳,-4f:可对康2a等等）。


6.确定延迟区间后，系统就会计算出全部符合的择了，计算成功后将会显示在窗口上，目前窗口显示我还没有完全实现，如果择数目太多会冲爆窗口显示区，无法看到前面的择，目前解决办法（翻页器）还在实现中（实际上很简单，但我可能没空，寄！），此外，会在根目录自动生成一个输出文件，文件名为“冰 系统的时间”，这个文件会记录全部的冰，现在建议在文件查看结果。

6+.结果生成格式，拿下面三条常见的格式举例：
琥珀  5c26b(33f) (→ 66 22c 2a ←) [0f,3f]
七夜  24a(60f) (→ 22c 22a 2a ←) [1f,4f]
翡翠  24c(30f) (→ 66 24c ←) [-1f]

1.首先琥珀，七夜，翡翠是角色名，这没什么说的。

2.其次是起攻连名称，括号内的是行动时间，f是帧的意思，60帧为1秒，不懂的话也不影响，但如果想溜好冰，理解帧数是基础。

3.(→ ←)中的内容包括中继技能与结尾技能，这一部分也就是择的主体。

4.最后的[xf,yf]也是一个区间，但它并不是上面说的延迟区间，我称其为“择延迟区间”，同样涉及帧数理解，如果不懂帧数，大概也看不懂这个吧，不过对我来说这个区间是相当值得关注的东西，这也是我手动计算帧数时最难处理的点，也可以说这是择的精华之一。
  要说明白这个东西还有些难度，我试着说一说吧。首先，这个区间和刚才选择的延迟区间是没有直接关系的，与其有关的是前面三个部分（character，start，mid+end），如果前三个部分确定，那么这个区间也就是确定的，一旦修改其中一项，择延迟区间就要随之更改。
  而填入的延迟区间只是对这个区间进行一个筛选，具体的筛选结果为：存在“延迟区间”中的一个整数，使得其存在于“择延迟区间”中。

  择延迟区间的具体内容：
  
  第一个数称为“至少延迟时间”，如果这个数是0f，那么也就是说这个择至少可以最速打出（至多则显示到第二个数上）。
  如果第一个数是-3f，那么也就是说这个择即便最速，也至少会不利对方3f。
  如果第一个数是正数例如2f，那么就是说这个择必须至少延迟2f，才会成立（最速或延迟1f会空）。
  
  第二个数称为“至多有利延迟时间”，多了“有利”两个字。
  如果[]内不存在第二个数，说明至少和至多相同，也就是说，想打出有利的效果，那么只有这一帧的时间（当然也可以延迟打出，同样可以命中，只不过这时会不利）。
  如果[]中有第二个数，假如是2f，那么也就是说，即便延迟2f打出，我方还是有利的，而一旦延迟3f，那么就是平帧了。




最后说说，本程序只是一个并不智能的帧数计算工具，不过是可以保证在帧数上必然成立而已，和mb的实际情况未必完全符合，只提供“或许成立”的可能性，也就是说通过这个工具得到的是一份原材料，具体的加工还需要继续实验，大概这玩意也不是适合正常人用的吧，做这个的主要目的实际上还是因为如果我自己算的话，计算量太大，不可能算的过来，所以才交给机器辅助计算，实际上在上周第一次打印出结果的时候，我就发现了很多自己以前没发现的择，现在的话基本已经成型了，真正的择我应该会花时间筛选出来然后做出文档，这个东西才比较适合大火们看。这个工具比较适合的是对溜冰已经有了初步的理解，以及想要自己开发新择的人使用。

